<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php Fpm on Edgarxue&#39;s Site</title>
    <link>http://edgarxue.github.io/tags/php-fpm/</link>
    <description>Recent content in Php Fpm on Edgarxue&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 May 2018 11:03:26 +0800</lastBuildDate>
    
	<atom:link href="http://edgarxue.github.io/tags/php-fpm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>开启nginx&#43;phpfpm状态页面</title>
      <link>http://edgarxue.github.io/2018/05/%E5%BC%80%E5%90%AFnginx-phpfpm%E7%8A%B6%E6%80%81%E9%A1%B5%E9%9D%A2/</link>
      <pubDate>Wed, 23 May 2018 11:03:26 +0800</pubDate>
      
      <guid>http://edgarxue.github.io/2018/05/%E5%BC%80%E5%90%AFnginx-phpfpm%E7%8A%B6%E6%80%81%E9%A1%B5%E9%9D%A2/</guid>
      <description>开启nginx、phpfpm的状态页面，便于监控和调优
 开启php-fpm的状态页面 编辑phpfpm配置文件 # 在php-fpm配置文件中开启状态页面 vim /path/to/php-fpm_conf/php-fpm.conf #取消以下两项的注释 pm.status_path = /pfstatus # /pfstatus自定义 ping.path = /ping # php ping接口  重新加载php-fpm sudo systemctl reload php-fpm.service  配置nginx 添加状态页面 把以下页面放到nginx配置目录下，保存为status.conf
server { listen 8080 default_server; # 端口自定义 server_name _; location /ngstatus # nginx status location自定义 { stub_status on; access_log off; allow 127.0.0.1; deny all; } location ~ ^/(pfstatus|ping)$ # 根据php-fpm.conf中的配置 { include fastcgi_params; fastcgi_pass 127.0.0.1:9000; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; allow 127.</description>
    </item>
    
    <item>
      <title>自定义编译安装Php-fpm</title>
      <link>http://edgarxue.github.io/2018/05/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85php-fpm/</link>
      <pubDate>Wed, 16 May 2018 14:27:36 +0800</pubDate>
      
      <guid>http://edgarxue.github.io/2018/05/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85php-fpm/</guid>
      <description>说明  基本环境为CentOS 7 编译后php-fpm由systemd管理 配置文件目录设置为安装目录下的etc  自定义编译安装php-fpm 下载想要安装的php版本 将脚本保存到和php下载包同一目录
EX: 保存脚本为php-fpm_install.sh bash php-fpm_install.sh php.version /path/to/install  脚本 #!/bin/bash # 安装依赖包 yum -y install libjpeg libjpeg-devel libpng libpng-devel libXpm libXpm-devel freetype freetype-devel zlib zlib-devel bzip2 bzip2-devel libcurl curl-devel libmcrypt libmcrypt-devel mhash-devel libxml2 libxml2-devel openssl openssl-devel libtiff libtiff-devel gd gd-devel # configure /usr/bin/tar -xf $1.tar.gz cd $1 ./configure --prefix=$2 --with-mysql=mysqlnd --with-pdo-mysql=mysqlnd --with-gd --with-mysqli=mysqlnd --with-openssl --with-bz2 --enable-mbstring --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-curl --with-libxml-dir=/usr --with-mcrypt=/usr/local/include --with-mhash=/usr/local/include --enable-xml --enable-sockets --enable-fpm --enable-zip --enable-soap --with-mcrypt --with-config-file-path=$2/etc --with-config-file-scan-dir=$2/etc/php.</description>
    </item>
    
  </channel>
</rss>